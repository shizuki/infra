---

- name: リポジトリの更新とインストール済みパッケージのアップデート
  become: yes
  yum:
    name=* state=latest
- name: gitのインストール
  become: yes
  yum:
    name: git
    state: present
- name: aclのインストール
  become: yes
  yum:
    name: acl
    state: present
- name: nodejsのインストール
  become: yes
  yum:
    name: nodejs
    state: present
- name: zlib-develのインストール
  become: yes
  yum:
    name: zlib-devel
    state: present
#- name: yarnのインストール
#  become: yes
#  yum:
#    name: yarn
#    state: present
#- name: 開発に必要なパッケージのインストール
#  become: yes
#  yum:
#    state: present
#    name:
#      - acl
#      - git
#      - nodejs
#      - zlib-devel
#      - yarn
- name: 「ec2-user」を削除する
  become: yes
  user:
    name: ec2-user
    state: absent
    remove: yes
- name: 動画エンコード用のディレクトリ作成
  become: yes
  file:
    path: /var/movie
    state: directory
    mode: 0777
- name: ec2-userディレクトリ作成
  become: yes
  file:
    path: /home/ec2-user/backup
    owner: vagrant
    group: vagrant
    state: directory
    mode: 0755
- name: ec2-userディレクトリにあるべきファイルのコピー
  copy:
    src: "{{item}}"
    dest: /home/ec2-user
    mode: 0777
  with_items:
    - minjs.sh
    - sass.sh
#    - nodeModules.zip
    - package.json
#- name: phpunitをgit管理しているものへのsymlinkにする
#  become: yes
#  file:
#    src: /var/www/html/phpunit/bin/phpunit-6.5.phar
#    dest: /usr/bin/phpunit
#    state: link
- name: Node.jsモジュール「gulp」インストール(global)
  become: yes
  npm:
    name: gulp
    global: yes
    version: '3.9.1'
- name: Node.jsモジュールのインストール(js、cssのminify用なので運用環境には不要)
# Fix me!
#  unarchive:
#    src: /home/ec2-user/nodeModules.zip
#    dest: /home/ec2-user
#    remote_src: yes
#  npm:
#  yarn:
#    path: /home/ec2-user
#  yarn: name="{{item.name}}" version='"{{item.version}}"' production=yes path=/home/ec2-user
#  npm: name="{{item.name}}" version='"{{item.version}}"' production=yes path=/home/ec2-user
#  with_items:
#    - {name: 'gulp', version: '3.9.1'}
#    - {name: 'autoprefixer', version: '6.5.1'}
#    - {name: 'event-stream', version: '3.3.4'}
#    - {name: 'gulp', version: '3.9.1'}
#    - {name: 'gulp-cssbeautify', version: '0.1.3'}
#    - {name: 'gulp-csso', version: '2.0.0'}
#    - {name: 'gulp-plumber', version: '1.1.0'}
#    - {name: 'gulp-postcss', version: '6.2.0'}
#    - {name: 'gulp-rename', version: '1.2.2'}
#    - {name: 'gulp-sass', version: '2.3.2'}
#    - {name: 'gulp-uglify', version: '2.0.0'}
- name: 不要になったファイルを削除
  file:
    path: /home/ec2-user/"{{item}}"
    state: absent
  with_items:
    - nodeModules.zip
    - package.json
- name: 「.bashrc」をバックアップ
  copy: >
    remote_src=yes
    src=/home/vagrant/.bashrc
    dest=/home/vagrant/.bashrc.BAK
    owner=vagrant
    group=vagrant
- name: オリジナルの「.bashrc」を削除
  file:
    path: /home/vagrant/.bashrc
    state: absent
- name: /home/ec2-user/node_modulesへのシンボリックリンクを作成
  file:
    src: /home/ec2-user/node_modules
    dest: /var/www/html/front-end/dev/node_modules
    state: link
- name: /var/www/html/.bashrcへのシンボリックリンクを作成
  file:
    src: /var/www/html/.bashrc
    dest: /home/vagrant/.bashrc
    owner: vagrant
    group: vagrant
    mode: 755
    state: link
- name: 「Too many open files」の設定の変更
  become: yes
  replace:
    path: /etc/systemd/system.conf
    regexp: '^#(DefaultLimitNOFILE|DefaultLimitNPROC)='
    replace: '\1=1006500'
#- name: 再起動
#  become: yes
#  reboot:
#- name: 再起動
#  become: yes
#  shell: "sleep 5 && reboot"
#  async: 1
#  poll: 0
#- name: 起動待ち
#  wait_for_connection:
#    connect_timeout: 20
#    sleep: 5
#    delay: 5
#    timeout: 60
#- name: unit2実行
#  shell: cleanFilesPre;cd /var/www/html/phpunit;phpdbg -qrr /usr/bin/phpunit --bootstrap /var/www/html/phpunit/Bootstrap.php . --coverage-html /var/www/html/phpunit/result2;cd -;cleanFilesPost
#  args:
#    executable: /bin/bash